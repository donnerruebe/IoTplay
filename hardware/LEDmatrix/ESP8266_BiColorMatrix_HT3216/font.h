/* 
 * SIMPLE IMAGES FOR RENDERING TO THE LED SCREEN.
 * 8 pixels-per-byte
 * Gaurav Manek, 2014
 */

//
// Online Services:
//

const byte IMG_MAIL [] PROGMEM = {0b11111111, 0b11000001, 0b10100001, 0b10010001, 0b10001001, 0b10000101, 0b10000101, 0b10001001};
#define IMG_MAIL_WIDTH   8
#define IMG_MAIL_HEIGHT 8

const byte IMG_FB [] PROGMEM = {0b00111111, 0b01000000, 0b10000100, 0b10011111, 0b10100100, 0b10100000, 0b10000000, 0b10000000};
#define IMG_FB_WIDTH   8
#define IMG_FB_HEIGHT    8

const byte IMG_TWITTER [] PROGMEM = {0b01111110, 0b10000001, 0b10111001, 0b10010101, 0b10010101, 0b10000001, 0b01111110};
#define IMG_TWITTER_WIDTH    7
#define IMG_TWITTER_HEIGHT   8

//
// Music:
//

const byte IMG_MUSIC [] PROGMEM = {0b00000010, 0b00000111, 0b11111110, 0b11000000, 0b11000000, 0b11000100, 0b11001110, 0b11111100};
#define IMG_MUSIC_WIDTH    8
#define IMG_MUSIC_HEIGHT   8

const byte IMG_MUSICNOTE [] PROGMEM = {0b00000100, 0b00001110, 0b11111100, 0b01000000};
#define IMG_MUSICNOTE_WIDTH    4
#define IMG_MUSICNOTE_HEIGHT   7

const byte IMG_SPEAKER_A [] PROGMEM = {0b00011000, 0b00011000, 0b00111100, 0b01000010, 0b10100101, 0b00011000};
const byte IMG_SPEAKER_B [] PROGMEM = {0b00011000, 0b00011000, 0b00111100, 0b01000010, 0b10111101, 0b00000000};
#define IMG_SPEAKER_WIDTH    6
#define IMG_SPEAKER_HEIGHT   8

//
// Emotions:
//

const byte IMG_HEART [] PROGMEM = {0b01110000, 0b11111000, 0b11111100, 0b11111110, 0b01111111, 0b11111110, 0b11111100, 0b11111000, 0b01110000};
#define IMG_HEART_WIDTH    9
#define IMG_HEART_HEIGHT   8

//
// Things:
//

const byte IMG_SAILBOAT [] PROGMEM = {0b00000010, 0b00100011, 0b01100011, 0b11111111, 0b01111011, 0b00111011, 0b00011011, 0b00001010};
#define IMG_SAILBOAT_WIDTH   8
#define IMG_SAILBOAT_HEIGHT  8

/*

#
##
###
#
##
###
####
#
*/

const byte IMG_XTREE [] PROGMEM ={0b00000010,0b00100110,0b01101111,0b11111111,0b01101111,0b00100110,0b00000010};


#ifndef __FONT8X4_H
#define __FONT8X4_H

#define FONT_8X4_HEIGHT  8

const byte FONT_8X4 [] PROGMEM = {
  0b00000000,                                                   // SPACE
  0b01110000, 0b11111101, 0b01110000,                           // !
  0b11000000, 0b00000000, 0b11000000,                           // "
  0b00100100, 0b11111111, 0b00100100, 0b11111111, 0b00100100,   // #
  0b00100100, 0b01010010, 0b11011011, 0b01001010, 0b00100100,   // $
  0b11000001, 0b11000110, 0b00011000, 0b01100011, 0b10000011,   // %
  0b01101110, 0b10010001, 0b10010010, 0b01100101,               // &
  0b11000000,                                                   // '
  0b00111100, 0b01000010, 0b10000001,                           // (
  0b10000001, 0b01000010, 0b00111100,                           // )
  0b10100000, 0b01000000, 0b10100000,                           // *
  0b00001000, 0b00001000, 0b00111110, 0b00001000, 0b00001000,   // +
  0b00000001, 0b00000010,                                       // ,
  0b00001000, 0b00001000, 0b00001000,                           // -
  0b00000001,                                                   // .
  0b00000011, 0b00001100, 0b00110000, 0b11000000,               // /
  0b01111110, 0b10110001, 0b10001101, 0b01111110,               // 0
  0b01000001, 0b11111111, 0b00000001,                           // 1
  0b01000011, 0b10000101, 0b10001001, 0b01110001,               // 2
  0b01000010, 0b10001001, 0b10001001, 0b01110110,               // 3
  0b00011100, 0b00100100, 0b01001111, 0b10000100,               // 4
  0b11110001, 0b10010001, 0b10010001, 0b10001110,               // 5
  0b01111110, 0b10001001, 0b10001001, 0b01000110,               // 6
  0b10000000, 0b10000111, 0b10011000, 0b11100000,               // 7
  0b01110110, 0b10001001, 0b10001001, 0b01110110,               // 8
  0b01110010, 0b10001001, 0b10001001, 0b01111110,               // 9
  0b00100010,                                                   // :
  0b00000001, 0b00100010,                                       // ;
  0b00011000, 0b00100100, 0b01000010, 0b10000001,               // <
  0b00010100, 0b00010100, 0b00010100, 0b00010100,               // =
  0b10000001, 0b01000010, 0b00100100, 0b00011000,               // >
  0b01000000, 0b10001101, 0b10001000, 0b01110000,               // ?
  0b01111110, 0b10000001, 0b10111001, 0b10000101, 0b01111100,   // @
  0b01111111, 0b10001000, 0b10001000, 0b01111111,               // A
  0b11111111, 0b10001001, 0b10001001, 0b01110110,               // B
  0b01111110, 0b10000001, 0b10000001, 0b01000010,               // C
  0b11111111, 0b10000001, 0b10000001, 0b01111110,               // D
  0b11111111, 0b10001001, 0b10001001, 0b10000001,               // E
  0b11111111, 0b10010000, 0b10010000, 0b10000000,               // F
  0b01111110, 0b10000001, 0b10001001, 0b01001110,               // G
  0b11111111, 0b00001000, 0b00001000, 0b11111111,               // H
  0b10000001, 0b11111111, 0b10000001,                           // I
  0b10000110, 0b10000001, 0b10000001, 0b11111110,               // J
  0b11111111, 0b00010000, 0b00101000, 0b11000111,               // K
  0b11111111, 0b00000001, 0b00000001, 0b00000001,               // L
  0b01111111, 0b11000000, 0b00110000, 0b11000000, 0b01111111,   // M
  0b11111111, 0b01100000, 0b00011000, 0b00000110, 0b11111111,   // N
  0b01111110, 0b10000001, 0b10000001, 0b01111110,               // O
  0b11111111, 0b10001000, 0b10001000, 0b01110000,               // P
  0b01111110, 0b10000001, 0b10000101, 0b10000010, 0b01111101,   // Q
  0b11111111, 0b10001000, 0b10001100, 0b01110011,               // R
  0b01100010, 0b10010001, 0b10001001, 0b01000110,               // S
  0b10000000, 0b11111111, 0b10000000,                           // T
  0b11111110, 0b00000001, 0b00000001, 0b11111110,               // U
  0b11111110, 0b00000001, 0b00000110, 0b11111000,               // V
  0b11111100, 0b00000011, 0b00011100, 0b00000011, 0b11111100,   // W
  0b10000001, 0b01100110, 0b00011000, 0b01100110, 0b10000001,   // X
  0b11000000, 0b00110000, 0b00001111, 0b00110000, 0b11000000,   // Y
  0b10000011, 0b10001101, 0b10110001, 0b11000001,               // Z
  0b11111111, 0b10000001,                                       // [
  0b11000000, 0b00110000, 0b00001100, 0b00000011,               // \
  0b10000001, 0b11111111,                                       // ]
  0b01000000, 0b10000000, 0b01000000,                           // ^
  0b00000001, 0b00000001, 0b00000001, 0b00000001,               // _
};

int FONT_8X4_END [] = {
       1,   4,   7,  12,  17,  22,  26,  27,
      30,  33,  36,  41,  43,  46,  47,  51,
      55,  58,  62,  66,  70,  74,  78,  82,
      86,  90,  91,  93,  97, 101, 105, 109,
     114, 118, 122, 126, 130, 134, 138, 142,
     146, 149, 153, 157, 161, 166, 171, 175,
     179, 184, 188, 192, 195, 199, 203, 208,
     213, 218, 222, 224, 228, 230, 233, 237
};

#endif  // __FONT8X4_H

/* 
 * 5-high FONT FOR RENDERING TO THE LED SCREEN.
 * Includes kerning support

 * 8 pixels-per-byte, variable width.
 * Gaurav Manek, 2011
 */

#ifndef __FONT5X4_H
#define __FONT5X4_H

#define FONT_5X4_HEIGHT  5
// Number of bytes per glyph 

const byte FONT_5X4 [] PROGMEM = {
    0b00000000,  //  
    0b11101000,  // !
    0b11000000, 0b00000000, 0b11000000,  // "
    0b01010000, 0b11111000, 0b01010000, 0b11111000, 0b01010000,  // #
    0b00000000, 0b00000000, 0b00000000, 0b00000000,  // $
    0b11001000, 0b11010000, 0b00100000, 0b01011000, 0b10011000,  // %
    0b01010000, 0b10101000, 0b10011000, 0b01011000,  // &
    0b11000000,  // '
    0b01110000, 0b10001000,  // (
    0b10001000, 0b01110000,  // )
    0b10100000, 0b01000000, 0b10100000,  // *
    0b00100000, 0b00100000, 0b11111000, 0b00100000, 0b00100000,  // +
    0b00001000, 0b00010000,  // ,
    0b00100000, 0b00100000, 0b00100000,  // -
    0b00001000,  // .
    0b00001000, 0b00110000, 0b01100000, 0b10000000,  // /
    0b01110000, 0b10001000, 0b01110000,  // 0
    0b01001000, 0b11111000, 0b00001000,  // 1
    0b01001000, 0b10011000, 0b10101000, 0b01001000,  // 2
    0b10101000, 0b10101000, 0b01010000,  // 3
    0b00110000, 0b01010000, 0b11111000, 0b00010000,  // 4
    0b11101000, 0b10101000, 0b10110000,  // 5
    0b01110000, 0b10101000, 0b10101000, 0b00010000,  // 6
    0b10000000, 0b10111000, 0b10100000, 0b11000000,  // 7
    0b01010000, 0b10101000, 0b10101000, 0b01010000,  // 8
    0b01000000, 0b10100000, 0b10101000, 0b01110000,  // 9
    0b01010000,  // :
    0b00001000, 0b01010000,  // ;
    0b00100000, 0b01010000, 0b10001000,  // <
    0b01010000, 0b01010000, 0b01010000,  // =
    0b10001000, 0b01010000, 0b00100000,  // >
    0b01000000, 0b10000000, 0b10011000, 0b01100000,  // ?
    0b01110000, 0b10000000, 0b10110000, 0b10101000, 0b11110000,  // @
    0b01111000, 0b10100000, 0b10100000, 0b01111000,  // A
    0b11111000, 0b10101000, 0b01010000,  // B
    0b01110000, 0b10001000, 0b10001000, 0b01010000,  // C
    0b11111000, 0b10001000, 0b01110000,  // D
    0b11111000, 0b10101000, 0b10001000,  // E
    0b11111000, 0b10100000, 0b10100000,  // F
    0b01110000, 0b10001000, 0b10011000, 0b01010000,  // G
    0b11111000, 0b00100000, 0b00100000, 0b11111000,  // H
    0b10001000, 0b11111000, 0b10001000,  // I
    0b10010000, 0b10001000, 0b11110000,  // J
    0b11111000, 0b00100000, 0b01010000, 0b10001000,  // K
    0b11111000, 0b00001000, 0b00001000,  // L
    0b11111000, 0b01000000, 0b00100000, 0b01000000, 0b11111000,  // M
    0b11111000, 0b01000000, 0b00100000, 0b00010000, 0b11111000,  // N
    0b01110000, 0b10001000, 0b10001000, 0b01110000,  // O
    0b11111000, 0b10100000, 0b01000000,  // P
    0b01110000, 0b10001000, 0b10001000, 0b10010000, 0b01101000,  // Q
    0b11111000, 0b10100000, 0b01011000,  // R
    0b01001000, 0b10101000, 0b10101000, 0b10010000,  // S
    0b10000000, 0b11111000, 0b10000000,  // T
    0b11110000, 0b00001000, 0b00001000, 0b11110000,  // U
    0b11000000, 0b00110000, 0b00001000, 0b00110000, 0b11000000,  // V
    0b11110000, 0b00001000, 0b00110000, 0b00001000, 0b11110000,  // W
    0b11011000, 0b00100000, 0b11011000,  // X
    0b11000000, 0b00111000, 0b11000000,  // Y
    0b10011000, 0b10101000, 0b10101000, 0b11001000,  // Z
    0b11111000, 0b10001000,  // [
    0b10000000, 0b01100000, 0b00110000, 0b00001000,  // \
    0b10001000, 0b11111000,  // ]
    0b01000000, 0b10000000, 0b01000000,  // ^
    0b00001000, 0b00001000, 0b00001000,  // _
};

const int FONT_5X4_END [] = {
    1,   2,   5,  10,  14,  19,  23,  24,
   26,  28,  31,  36,  38,  41,  42,  46,
   49,  52,  56,  59,  63,  66,  70,  74,
   78,  82,  83,  85,  88,  91,  94,  98,
  103, 107, 110, 114, 117, 120, 123, 127,
  131, 134, 137, 141, 144, 149, 154, 158,
  161, 166, 169, 173, 176, 180, 185, 190,
  193, 196, 200, 202, 206, 208, 211, 214
};

#endif  // __FONT5X4_H

